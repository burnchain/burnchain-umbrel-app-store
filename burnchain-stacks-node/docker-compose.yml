version: "3.7"

services:

  app_proxy:
    environment:
      APP_HOST: $APP_STACKS_API_IP
      APP_PORT: $APP_STACKS_API_PORT
      PROXY_AUTH_ADD: "false"
    
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    user: "1000:1000"
    init: true
    restart: on-failure
    stop_grace_period: 1m
    volumes:
      - ${SCRIPTPATH}/persistent-data/mainnet/postgres:/var/lib/postgresql/data
    env_file:
      - ${SCRIPTPATH}/.env
    environment:
      - POSTGRES_PASSWORD=postgres
    networks:
      default:
        ipv4_address: $APP_STACKS_PG_IP
  stacks-blockchain:
    image: wileyj/stacks-blockchain:2.05.0.5.1
    container_name: stacks-blockchain
    user: "1000:1000"
    init: true
    restart: on-failure
    stop_grace_period: 10m
    volumes:
      - ${SCRIPTPATH}/conf/mainnet:/src/stacks-blockchain
      - ${SCRIPTPATH}/persistent-data/mainnet/stacks-blockchain:/root/stacks-blockchain/data
    ports:
      - 20443:20443
      - 20444:20444
    env_file:
      - ${SCRIPTPATH}/.env
    networks:
      default:
        ipv4_address: $APP_STACKS_BC_IP
    depends_on:
      - stacks-blockchain-api
    command:
      [
        "/bin/stacks-node",
        "start",
        "--config",
        "/src/stacks-blockchain/Config.toml",
      ]
  stacks-blockchain-api:
    image: hirosystems/stacks-blockchain-api:6.1.1
    container_name: stacks-blockchain-api
    user: "1000:1000"
    init: true
    restart: always
    stop_grace_period: 1m
    environment:
      - STACKS_CHAIN_ID=${STACKS_CHAIN_ID}
    volumes:
      - ${SCRIPTPATH}/persistent-data/bns-data:/bns-data
      - ${SCRIPTPATH}/persistent-data/mainnet/event-replay:/tmp/event-replay
    env_file:
      - ${SCRIPTPATH}/.env
    networks:
      default:
        ipv4_address: $APP_STACKS_API_IP
    depends_on:
      - postgres
    command: ["npm", "run", "start"]
